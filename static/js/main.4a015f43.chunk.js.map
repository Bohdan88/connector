{"version":3,"sources":["assets/toronto.jpg","LoginForm.js","Splash.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LoginForm","className","Form","Group","controlId","Label","Control","type","placeholder","to","Button","variant","style","color","CustomCard","title","ComponentIcon","Card","width","Body","size","Title","Splash","Jumbotron","Nav","Item","Link","eventKey","Dropdown","Toggle","id","Menu","alt","src","Container","Row","Col","FaRegChartBar","AiOutlineSearch","IoIosConstruct","GrDocumentText","AiOutlineCloudDownload","AiOutlineUser","IoIosSpeedometer","FaInfoCircle","BsFillQuestionCircleFill","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4a015f43.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/toronto.6edad9b1.jpg\";","import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst LoginForm = () => {\n    return (\n        <div className=\"container-login\">\n            <div className=\"container-form\">\n                <Form className=\"form-login\">\n                    <h2 className=\"form-header\">Sign in</h2>\n                    <h6 className=\"sub-header\"> Use the credentials supplied to you by MPAC. </h6>\n                    <Form.Group className=\"form-field\" controlId=\"formBasicEmail\">\n                        <div className=\"form-field-labels\">\n                            <Form.Label>USER ID</Form.Label>\n                            <Form.Label className=\"form-field-forgot\">Forgot User ID?</Form.Label>\n                        </div>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                    </Form.Group>\n\n                    <Form.Group className=\"form-field\" controlId=\"formBasicPassword\">\n                        <div className=\"form-field-labels\">\n                            <Form.Label>PASSWORD</Form.Label>\n                            <Form.Label className=\"form-field-forgot\">Forgot Password?</Form.Label>\n                        </div>\n                        <Form.Control type=\"password\" placeholder=\"Password\" />\n                    </Form.Group>\n\n                    <Link to=\"/splash\">\n                        <Button className=\"button-login\" variant=\"light\" type=\"submit\">\n                            <span style={{ color: \"black\" }}> LOGIN</span>{\" \"}\n                        </Button>\n                    </Link>\n                </Form>\n            </div>\n        </div>\n    );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport { Nav, Jumbotron, Dropdown, Container, Row, Col, Card } from \"react-bootstrap\";\nimport { GiModernCity } from \"react-icons/gi\";\nimport { FaRegChartBar, FaRegKeyboard, FaInfoCircle } from \"react-icons/fa\";\nimport { GrDocumentText } from \"react-icons/gr\";\nimport { AiOutlineSearch, AiOutlineCloudDownload, AiOutlineUser } from \"react-icons/ai\";\nimport { IoIosConstruct, IoIosSpeedometer } from \"react-icons/io\";\nimport { BsFillQuestionCircleFill } from \"react-icons/bs\";\nimport { Link } from \"react-router-dom\";\n\nimport src from \"./assets/toronto.jpg\";\n\nconst CustomCard = ({ title, ComponentIcon }) => {\n    return (\n        <Card className=\"custom-card\" style={{ width: \"18rem\" }}>\n            <Link to=\"/graphics\">\n                <Card.Body className=\"custom-card-body\">\n                    <div className=\"card-icon-wrapper\">\n                        <ComponentIcon color=\"darkslategrey\" size=\"4rem\" />{\" \"}\n                    </div>\n                    <Card.Title className=\"custom-card-title\">{title}</Card.Title>\n                </Card.Body>\n            </Link>\n        </Card>\n    );\n};\nconst Splash = () => {\n    return (\n        <div className=\"container-splash\">\n            <Jumbotron className=\"jumbotron-nav\">\n                <Nav className=\"container-nav\">\n                    <div className=\"container-left-side-items\">\n                        <Nav.Item>\n                            <Nav.Link>\n                                <GiModernCity size=\"3rem\" color=\"crimson\" />{\" \"}\n                                <span className=\"splash-span-name\">Municipal </span>\n                                <span className=\"splash-span-connect\">Connect </span>\n                            </Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <Nav.Link eventKey=\"link-1\">\n                                <Dropdown className=\"dropdown custom-dropdown\">\n                                    <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\">\n                                        South Glengarry Township\n                                    </Dropdown.Toggle>\n\n                                    <Dropdown.Menu>\n                                        <Dropdown.Item>North Glengarry Township</Dropdown.Item>\n                                        <Dropdown.Item>Hawkesbury Town</Dropdown.Item>\n                                        <Dropdown.Item>The nation Municipality</Dropdown.Item>\n                                    </Dropdown.Menu>\n                                </Dropdown>\n                            </Nav.Link>\n                        </Nav.Item>\n                    </div>\n                    <div className=\"container-right-side-items\">\n                        <Nav.Item className=\"custom-item\">\n                            <FaRegChartBar color=\"darkslategrey\" size=\"1.5rem\" />\n                        </Nav.Item>\n                        <Nav.Item className=\"custom-item\">\n                            <AiOutlineSearch color=\"darkslategrey\" size=\"1.5rem\" />\n                        </Nav.Item>\n                        <Nav.Item className=\"custom-item\">\n                            <IoIosConstruct color=\"darkslategrey\" size=\"1.5rem\" />\n                        </Nav.Item>\n                        <Nav.Item className=\"custom-item\">\n                            <GrDocumentText color=\"darkslategrey\" size=\"1.5rem\" />\n                        </Nav.Item>\n                        <Nav.Item className=\"custom-item\">\n                            <AiOutlineCloudDownload color=\"darkslategrey\" size=\"1.5rem\" />\n                        </Nav.Item>\n                        <Nav.Item className=\"custom-item\">\n                            <AiOutlineUser color=\"darkslategrey\" size=\"1.5rem\" />\n                        </Nav.Item>\n                        <Nav.Item className=\"custom-item\">\n                            <IoIosSpeedometer color=\"darkslategrey\" size=\"1.5rem\" />\n                        </Nav.Item>\n                        <Nav.Item className=\"custom-item\">\n                            <FaRegKeyboard color=\"darkslategrey\" size=\"1.5rem\" />\n                        </Nav.Item>\n                        <Nav.Item className=\"custom-item\">\n                            <FaInfoCircle color=\"darkslategrey\" size=\"1.5rem\" />\n                        </Nav.Item>\n                        <Nav.Item className=\"custom-item\">\n                            <BsFillQuestionCircleFill color=\"darkslategrey\" size=\"1.5rem\" />\n                        </Nav.Item>\n                    </div>\n                </Nav>\n            </Jumbotron>\n\n            <div className=\"container-cards\">\n                <img className=\"background-card\" alt=\"background\" src={src} />\n                <Container className=\"custom-container-cards\">\n                    <Row className=\"custom-row-cards\">\n                        <Col className=\"custom-col-cards\">\n                            <CustomCard title=\"Dashboard Analytics\" ComponentIcon={FaRegChartBar} />\n                        </Col>\n                        <Col className=\"custom-col-cards\">\n                            <CustomCard title=\"Property Monitoring\" ComponentIcon={AiOutlineSearch} />\n                        </Col>\n                        <Col className=\"custom-col-cards\">\n                            <CustomCard title=\"Property Search\" ComponentIcon={IoIosConstruct} />\n                        </Col>\n                        <Col className=\"custom-col-cards\">\n                            <CustomCard title=\"RfR Dashboard\" ComponentIcon={GrDocumentText} />\n                        </Col>\n                    </Row>\n                    <Row className=\"custom-row-cards\">\n                        <Col className=\"custom-col-cards\">\n                            <CustomCard title=\"Dashboard Analytics\" ComponentIcon={AiOutlineCloudDownload} />\n                        </Col>\n                        <Col className=\"custom-col-cards\">\n                            <CustomCard title=\"Property Monitoring\" ComponentIcon={AiOutlineUser} />\n                        </Col>\n                        <Col className=\"custom-col-cards\">\n                            <CustomCard title=\"Dashboard Analytics\" ComponentIcon={IoIosSpeedometer} />\n                        </Col>\n                        <Col className=\"custom-col-cards\">\n                            <CustomCard title=\"Property Monitoring\" ComponentIcon={FaInfoCircle} />\n                        </Col>\n                    </Row>\n                    <Row className=\"custom-row-cards\">\n                        <Col className=\"custom-col-cards\">\n                            <CustomCard title=\"Property Search\" ComponentIcon={BsFillQuestionCircleFill} />\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </div>\n    );\n};\n\nexport default Splash;\n","import React from \"react\";\nimport LoginForm from \"./LoginForm\";\nimport Splash from \"./Splash\";\nimport Graphics from \"./Graphics\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst App = () => {\n    return (\n        <div>\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" component={LoginForm} />\n                    <Route path=\"/splash\" component={Splash} />\n                    {/* <Route path=\"/graphics\" component={Graphics} /> */}\n                </Switch>\n                <LoginForm />\n                {/* <Splash /> */}\n            \n            </Router>\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// styles\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}